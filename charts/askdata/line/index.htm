<!DOCTYPE html>
<html>
<head>
<title>Askdata - Line Chart</title>
<!-- Beginning Include Header -->
<!--# include virtual="/charts/askdata/_includes/header.html" -->
<!-- End Include Header -->
</head>
<body>
<!-- Beginning Include Watermak -->
<!--# include virtual="/charts/askdata/_includes/watermark.html" -->
<!-- End Include Watermak -->

<div id="container">
  <canvas id="canvas"></canvas></div>
<script>

function displayChart(data) {

// Beinning include prepare-layout
<!--# include virtual="/charts/askdata/_includes/prepare-layout.js" -->
// End include prepare-layout

    console.log(data);

    var color = Chart.helpers.color;
    var measures = [];
    for(var i in data.resultSet.measures) {  
        var item = data.resultSet.measures[i];
    
    // theme handling
    if (theme.length > 0) {
      item.color = theme.palette[i]
    } else {
      item.color = data.resultSet.color.palette[i];
      if (i==0) {item.color = data.resultSet.color.accent; }
    }

    for (let i = 0; i < item.numericValues.length; i++) {

      if(typeof item.numericValues[i] != 'number'){ 
        console.log("Warning: numericValues Not numeric!")
      }
    }
      
    // Check if item has the format property otherwise set it to null
    if(typeof item.format != 'undefined'){
      console.log("Applying formatting")
    } else {
      item.format = null;
      console.log("NOT applied formatting")
    }
    
    measures.push({
        "label" : item.name,
        "data" : item.numericValues,
        "backgroundColor": item.color,
        "format": item.format,
        "borderColor": item.color
    });

    }
  
    // If format for the first measure is different from null apply tick to scale y
    if((measures[0].format !== null) && (measures[0].format.indexOf("$")>-1)){
       var yAxes = {
        ticks: {
           callback: function(value, index, values) {
               // if value is numeric                
               if (typeof value === 'number') {
                    return formatNumber(value, measures[0].format)
                  } else {
                    return value;
                  }
            }
        }
      }
    } else {
            var yAxes = {
              ticks: {
                beginAtZero: true
            }
        }
    }

    // Show legend if measures more than one
    var displayLegend = true
    
    if (measures.length == 1) {
      displayLegend = false;
    }

    var chartData = {
      labels: data.resultSet.dimension.labels,
      datasets: measures,
    };

    // Todo - replace with dynamic locale, rounding, currency and measurement units
    // Scales should be aggregated by measurement units
    // Color is used as 3rd axis if the measurements units are greaten than 2
    var labelNumberRoundTo = 2;
    var labelNumberLocale = 'en-US';
    var labelFontSize = 20;
    var labelFontFamily = "'Helvetica', sans-serif";
    var lebelNumberCurrency = null;
    var lebelNumberMeasurmenentUnit = null;
  
      var ctx = document.getElementById('canvas').getContext('2d');
      window.myHorizontalBar = new Chart(ctx, {
        type: 'line',
        data: chartData,
        options: {
           scales: {
              yAxes: [yAxes]
           },
          responsive: true,
          maintainAspectRatio:false,
          legend: {
            display : displayLegend,
            position: 'top',
            align: 'center',
            fontSize:30,
            padding: 5,
            labels: {
            usePointStyle: true}
          },
          title: {
            display: true,
            text: data.title,
            fontSize: titleSize(data.title),
            fontStyle:'normal'
          },
        elements: {
          line: {fill: false},
          point: {radius: 0}
          }
        
        }
      });
    
    var colorNames = Object.keys(window.chartColors);

}

// Beinning include Request-data
<!--# include virtual="/charts/askdata/_includes/request-data.js" -->
// End include Request-data

</script>

</body>
</html>

