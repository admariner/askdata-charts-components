<!--
    THIS EXAMPLE WAS DOWNLOADED FROM https://echarts.apache.org/examples/en/editor.html?c=funnel
-->
<!DOCTYPE html>
<html style="height: 100%">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js"></script>
        <script src="/lib/scripts/utils.js"></script>
        <script src="/lib/scripts/env.js"></script>
        <script src="/lib/scripts/jquery.min.js"></script>
        <link href='http://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>
        <link href="/lib/styles/css" rel="stylesheet" type="text/css">
        <link rel="stylesheet" type="text/css" href="/lib/styles/style.css">
        <script src="https://unpkg.com/mustache@latest"></script>
    </head>


    <body style="height: 100%; margin: 0">
        <div id="container" style="height: 100%"></div>
    </body>

    
        <script type="text/javascript">


environment_widget = "https://api-dev.askdata.com";
// environment_widget = "https://api-qa.askdata.com"
// environment_widget = "https://api.askdata.com"  // prod  da togliere quando porto su...


$.ajax({

url: environment_widget +"/smartinsight/widgets/" + getUrlParameter('widgetId'),
type: "GET",
async: false,
beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + getToken() 
 ).setRequestHeader('Content-Type','application/json')},
success: function(data) { 
 console.log(data)        
 var dom = document.getElementById("container");
var myChart = echarts.init(dom);
var app = {};

var option;


var val = parseFloat(data.fields.m2_id.data)
var bool = data.fields.s2_id.data


// text: ['COR 1 Alto', 'COR 1 Basso']
// name: 'Valore Totale Italia: \n', 
try{
    var left_label = data.fields.s3_id.data
}
catch(error){
    var left_label = "" 
}

try{
    var right_label = data.fields.s4_id.data
}
catch(error){
    var right_label = ""
}

try{
    var label_line = data.fields.s5_id.data
}
catch(error){
    var label_line = ""
}



var lista_val =[]
for(var i = 0; i < data.fields.m1_id.data.length; i++)
  {
    lista_val[i] = data.fields.m1_id.data[i].toString().replace('%', '');
  }


option = {
    dataset: {
        source: {
        'product': data.fields.s1_id.data,
        'count': lista_val
        }
    },
    grid: {
        containLabel: true,    
        left: 10,
        top: 10,
        right: 10,
        bottom: 28
        },
    xAxis: {name: 'COR 1'},
    yAxis: {
        type: 'category',
        inverse:true,
        axisLabel:{
            interval: 0,
            fontSize: 11,
            fontFamily: 'Roboto'
        }
        
    },
    visualMap: {
        orient: 'horizontal',
        left: 'center',
        min: val - 80,
        max: val + 80,
                inRange: {
            color: ['#65B581', '#FD665F']
        },
        text: [right_label, left_label],
        // Map the score column to color
        dimension: 1
    },
    series: [
        
        {
            type: 'bar',
            label: {
            normal: {
                show: true,
                color: "#fff",
                position: 'inside',
                fontSize: 12,
                fontFamily: 'Roboto',
                formatter: function(d) 
                {
                    if (bool == "true") 
                    {
                        return d.value[1] +" %";
                    }
                    else
                    {
                        return d.value[1];
                     } 
                }
              }
          },
            markLine: {
               data: [ 
                   { name: label_line, 
                   xAxis: val, 
                   label: {
                        normal: {
                        offset: [65, -40],
                        show: true,
                        fontSize: 13,
                        fontFamily: 'Roboto',
                        formatter: function(d) {
                            return d.name + data.fields.m2_id.data;
                          }
                             }}}],
               silent: true,
               show: true,
               symbol: "none",
               lineStyle: {
                   normal: {
                        type: "solid",
                        color: "black"
                            }
                        }
            },
            encode: {
                // Map the "amount" column to X axis.
                x: 'count',
                // Map the "product" column to Y axis
                y: 'product'
            }
        }
    ]
};



if (option && typeof option === 'object') {
    myChart.setOption(option);
}

    }
  });
        </script>

</html>